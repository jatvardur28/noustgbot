import asyncio
import logging
from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command
from aiogram.types import Message, InlineKeyboardMarkup, InlineKeyboardButton, CallbackQuery
import httpx
import os
from dotenv import load_dotenv
import json
import time
from datetime import datetime

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s'
)
logger = logging.getLogger(__name__)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
BOT_TOKEN = os.getenv('BOT_TOKEN')
NOUS_API_KEY = os.getenv('NOUS_API_KEY')

if not BOT_TOKEN or not NOUS_API_KEY:
    raise ValueError("–ù–µ –Ω–∞–π–¥–µ–Ω—ã BOT_TOKEN –∏–ª–∏ NOUS_API_KEY –≤ .env —Ñ–∞–π–ª–µ")

bot = Bot(token=BOT_TOKEN)
dp = Dispatcher()

# URL –¥–ª—è API Nous Research
NOUS_API_URL = "https://inference-api.nousresearch.com/v1/chat/completions"

# –î–æ—Å—Ç—É–ø–Ω—ã–µ –º–æ–¥–µ–ª–∏ - –û–ü–¢–ò–ú–ò–ó–ò–†–û–í–ê–ù–ù–´–ï –ù–ê–°–¢–†–û–ô–ö–ò
AVAILABLE_MODELS = {
    "deephermes": {
        "name": "DeepHermes-3-Mistral-24B-Preview",
        "display_name": "üß† DeepHermes 24B (–ë—ã—Å—Ç—Ä–∞—è)",
        "context": "32k",
        "description": "–ë—ã—Å—Ç—Ä–∞—è –º–æ–¥–µ–ª—å —Å –≥–ª—É–±–æ–∫–∏–º –º—ã—à–ª–µ–Ω–∏–µ–º",
        "system_prompt": "You are a deep thinking AI, you may use extremely long chains of thought to deeply consider the problem and deliberate with yourself via systematic reasoning processes to help come to a correct solution prior to answering. You should enclose your thoughts and internal monologue inside <think> </think> tags, and then provide your solution or response to the problem.",
        "max_tokens": 1024,
        "temperature": 0.7,
        "timeout": 120.0
    },
    "hermes405b": {
        "name": "Hermes-3-Llama-3.1-405B",
        "display_name": "üöÄ Hermes 405B (–ú–æ—â–Ω–∞—è)",
        "context": "32k", 
        "description": "–°–∞–º–∞—è –º–æ—â–Ω–∞—è –º–æ–¥–µ–ª—å –¥–ª—è —Å–ª–æ–∂–Ω—ã—Ö –∑–∞–¥–∞—á",
        # –£–ü–†–û–©–ï–ù–ù–´–ô —Å–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç –¥–ª—è —É—Å–∫–æ—Ä–µ–Ω–∏—è
        "system_prompt": "You are Hermes 3, a helpful AI assistant. Provide clear, concise, and accurate responses.",
        # –£–ú–ï–ù–¨–®–ï–ù–ù–´–ô max_tokens –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –æ—Ç–≤–µ—Ç–∞
        "max_tokens": 512,
        # –ü–û–ù–ò–ñ–ï–ù–ù–ê–Ø —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –¥–ª—è —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç–∏
        "temperature": 0.3,
        # –£–í–ï–õ–ò–ß–ï–ù–ù–´–ô —Ç–∞–π–º–∞—É—Ç
        "timeout": 200.0
    }
}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: –º–æ–¥–µ–ª—å, —Ä–µ–∂–∏–º –æ—Ç–ª–∞–¥–∫–∏
user_settings = {}

# –ü—Ä–æ—Å—Ç–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏ rate limiting
user_stats = {}
user_last_request = {}  # –î–ª—è rate limiting
RATE_LIMIT_SECONDS = 3  # –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π –∏–Ω—Ç–µ—Ä–≤–∞–ª –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏

def get_user_model(user_id: int) -> str:
    """–ü–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—É—â—É—é –º–æ–¥–µ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    return user_settings.get(user_id, {}).get('model', 'deephermes')

def set_user_model(user_id: int, model: str):
    """–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –º–æ–¥–µ–ª—å –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    if user_id not in user_settings:
        user_settings[user_id] = {}
    user_settings[user_id]['model'] = model

def get_user_debug_mode(user_id: int) -> bool:
    """–ü–æ–ª—É—á–∏—Ç—å —Ä–µ–∂–∏–º –æ—Ç–ª–∞–¥–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    return user_settings.get(user_id, {}).get('debug', False)

def set_user_debug_mode(user_id: int, debug: bool):
    """–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ä–µ–∂–∏–º –æ—Ç–ª–∞–¥–∫–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    if user_id not in user_settings:
        user_settings[user_id] = {}
    user_settings[user_id]['debug'] = debug

def check_rate_limit(user_id: int) -> bool:
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ rate limiting –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    current_time = time.time()
    last_request = user_last_request.get(user_id, 0)
    
    if current_time - last_request < RATE_LIMIT_SECONDS:
        return False
    
    user_last_request[user_id] = current_time
    return True

def get_time_until_next_request(user_id: int) -> int:
    """–ü–æ–ª—É—á–∏—Ç—å –≤—Ä–µ–º—è –¥–æ —Å–ª–µ–¥—É—é—â–µ–≥–æ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞"""
    current_time = time.time()
    last_request = user_last_request.get(user_id, 0)
    remaining = RATE_LIMIT_SECONDS - (current_time - last_request)
    return max(0, int(remaining))

def create_model_keyboard() -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ –º–æ–¥–µ–ª–∏"""
    keyboard = []
    for model_key, model_info in AVAILABLE_MODELS.items():
        keyboard.append([
            InlineKeyboardButton(
                text=model_info["display_name"],
                callback_data=f"model_{model_key}"
            )
        ])
    keyboard.append([
        InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="cancel")
    ])
    return InlineKeyboardMarkup(inline_keyboard=keyboard)

def optimize_message_for_405b(message: str) -> str:
    """–û–ø—Ç–∏–º–∏–∑–∏—Ä—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –º–æ–¥–µ–ª–∏ 405B"""
    # –î–ª—è 405B —Å–æ–∫—Ä–∞—â–∞–µ–º –¥–ª–∏–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è —Å—Ä–∞–∑—É
    if len(message) > 300:
        return message[:250] + "... (—Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ–∫—Ä–∞—â–µ–Ω–æ –¥–ª—è —É—Å–∫–æ—Ä–µ–Ω–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏)"
    return message

async def call_nous_api(user_message: str, user_id: int, retry_count: int = 0) -> str:
    """
    –û–ü–¢–ò–ú–ò–ó–ò–†–û–í–ê–ù–ù–ê–Ø —Ñ—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞–ø—Ä–æ—Å–∞ –∫ API Nous Research
    """
    headers = {
        "Authorization": f"Bearer {NOUS_API_KEY}",
        "Content-Type": "application/json"
    }
    
    # –ü–æ–ª—É—á–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user_model = get_user_model(user_id)
    model_config = AVAILABLE_MODELS[user_model]
    
    # –°–ü–ï–¶–ò–ê–õ–¨–ù–ê–Ø –û–ü–¢–ò–ú–ò–ó–ê–¶–ò–Ø –î–õ–Ø 405B
    if user_model == "hermes405b":
        user_message = optimize_message_for_405b(user_message)
        # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ —Å–æ–∫—Ä–∞—â–µ–Ω–∏–µ –ø—Ä–∏ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –ø–æ–ø—ã—Ç–∫–µ
        if retry_count > 0:
            user_message = user_message[:150] + "... (—É–ø—Ä–æ—â–µ–Ω–Ω—ã–π –∑–∞–ø—Ä–æ—Å)"
    elif len(user_message) > 500 and retry_count > 0:
        # –î–ª—è –¥—Ä—É–≥–∏—Ö –º–æ–¥–µ–ª–µ–π —Å–æ–∫—Ä–∞—â–∞–µ–º —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –ø–æ–≤—Ç–æ—Ä–µ
        user_message = user_message[:400] + "... (—Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ–∫—Ä–∞—â–µ–Ω–æ)"
    
    # –°–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç - —É–ø—Ä–æ—â–∞–µ–º –ø—Ä–∏ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –ø–æ–ø—ã—Ç–∫–µ
    system_prompt = model_config["system_prompt"]
    if retry_count > 0:
        system_prompt = "You are a helpful AI assistant. Answer briefly and clearly."
    
    # –û–ü–¢–ò–ú–ò–ó–ò–†–û–í–ê–ù–ù–´–ô payload –¥–ª—è 405B
    max_tokens = model_config["max_tokens"]
    temperature = model_config["temperature"]
    
    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –ø—Ä–∏ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –ø–æ–ø—ã—Ç–∫–µ
    if retry_count > 0:
        max_tokens = min(max_tokens, 256)
        temperature = 0.1  # –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –¥–µ—Ç–µ—Ä–º–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç
    
    payload = {
        "model": model_config["name"],
        "messages": [
            {
                "role": "system",
                "content": system_prompt
            },
            {
                "role": "user", 
                "content": user_message
            }
        ],
        "max_tokens": max_tokens,
        "temperature": temperature,
        "stream": False,
        # –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ï –ü–ê–†–ê–ú–ï–¢–†–´ –î–õ–Ø –°–¢–ê–ë–ò–õ–¨–ù–û–°–¢–ò
        "top_p": 0.9 if retry_count == 0 else 0.5,
        "frequency_penalty": 0.0,
        "presence_penalty": 0.0
    }
    
    try:
        # –ê–î–ê–ü–¢–ò–í–ù–´–ï –¢–ê–ô–ú–ê–£–¢–´
        timeout_read = model_config["timeout"]
        if retry_count > 0:
            timeout_read = min(timeout_read, 60.0)  # –°–æ–∫—Ä–∞—â–∞–µ–º –ø—Ä–∏ –ø–æ–≤—Ç–æ—Ä–µ
            
        timeout = httpx.Timeout(
            connect=30.0, 
            read=timeout_read, 
            write=30.0, 
            pool=30.0
        )
        
        async with httpx.AsyncClient(timeout=timeout) as client:
            logger.info(f"–ó–∞–ø—Ä–æ—Å –∫ {model_config['display_name']} –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id} (–ø–æ–ø—ã—Ç–∫–∞ {retry_count + 1})")
            
            response = await client.post(NOUS_API_URL, json=payload, headers=headers)
            
            if response.status_code == 200:
                data = response.json()
                ai_response = data['choices'][0]['message']['content'].strip()
                logger.info(f"‚úÖ –ü–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç –æ—Ç {model_config['display_name']} (–¥–ª–∏–Ω–∞: {len(ai_response)} —Å–∏–º–≤–æ–ª–æ–≤)")
                return ai_response
                
            elif response.status_code == 429:
                logger.warning("Rate limit –¥–æ—Å—Ç–∏–≥–Ω—É—Ç")
                return "üö´ **–ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –∑–∞–ø—Ä–æ—Å–æ–≤ API**\n\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ —á–µ—Ä–µ–∑ 1-2 –º–∏–Ω—É—Ç—ã. Nous Research –æ–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø—Ä–æ—Å–æ–≤."
                
            elif response.status_code == 400:
                logger.error(f"–û—à–∏–±–∫–∞ –≤ –∑–∞–ø—Ä–æ—Å–µ: {response.text}")
                if retry_count == 0:
                    # –ü—Ä–æ–±—É–µ–º —Å –±–æ–ª–µ–µ –ø—Ä–æ—Å—Ç—ã–º –∑–∞–ø—Ä–æ—Å–æ–º
                    return await call_nous_api("–û—Ç–≤–µ—Ç—å –∫—Ä–∞—Ç–∫–æ –Ω–∞ –≤–æ–ø—Ä–æ—Å: " + user_message[:100], user_id, retry_count + 1)
                return "‚ùå –û—à–∏–±–∫–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ –∑–∞–ø—Ä–æ—Å–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ—Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞—Ç—å –≤–æ–ø—Ä–æ—Å."
                
            else:
                logger.error(f"API Error: {response.status_code} - {response.text}")
                return f"‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ API ({response.status_code}). –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
                
    except httpx.TimeoutException:
        logger.error(f"‚è∞ Timeout –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ {model_config['display_name']} (–ø–æ–ø—ã—Ç–∫–∞ {retry_count + 1})")
        
        if retry_count < 1:  # –û–¥–Ω–∞ –ø–æ–≤—Ç–æ—Ä–Ω–∞—è –ø–æ–ø—ã—Ç–∫–∞
            logger.info("üîÑ –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –ø–æ–ø—ã—Ç–∫–∞ —Å —É–ø—Ä–æ—â–µ–Ω–Ω—ã–º –∑–∞–ø—Ä–æ—Å–æ–º...")
            return await call_nous_api(user_message, user_id, retry_count + 1)
            
        # –°–ø–µ—Ü–∏–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è 405B
        if user_model == "hermes405b":
            return f"‚è∞ **{model_config['display_name']} –ø–µ—Ä–µ–≥—Ä—É–∂–µ–Ω–∞**\n\n–ú–æ–¥–µ–ª—å —Å–ª–∏—à–∫–æ–º –¥–æ–ª–≥–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∑–∞–ø—Ä–æ—Å. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ:\n‚Ä¢ –ó–∞–¥–∞—Ç—å –±–æ–ª–µ–µ –ø—Ä–æ—Å—Ç–æ–π/–∫–æ—Ä–æ—Ç–∫–∏–π –≤–æ–ø—Ä–æ—Å\n‚Ä¢ –ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å—Å—è –Ω–∞ DeepHermes 24B (/model)\n‚Ä¢ –ü–æ–≤—Ç–æ—Ä–∏—Ç—å –∑–∞–ø—Ä–æ—Å —á–µ—Ä–µ–∑ –º–∏–Ω—É—Ç—É"
        else:
            return f"‚è∞ {model_config['display_name']} —Ä–∞–±–æ—Ç–∞–µ—Ç –º–µ–¥–ª–µ–Ω–Ω–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–¥–∞—Ç—å –±–æ–ª–µ–µ –∫–æ—Ä–æ—Ç–∫–∏–π –≤–æ–ø—Ä–æ—Å."
            
    except httpx.ConnectError:
        logger.error("üåê –û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å Nous API")
        return "üåê **–û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è**\n\n–ù–µ —É–¥–∞–µ—Ç—Å—è –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ AI-—Å–µ—Ä–≤–∏—Å—É. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-—Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∏–ª–∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
        
    except Exception as e:
        logger.error(f"üí• –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –∫ API: {str(e)}")
        return f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {str(e)}"

def clean_ai_response(response: str) -> str:
    """
    –û—á–∏—â–∞–µ—Ç –æ—Ç–≤–µ—Ç AI –æ—Ç —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö —Ç–µ–≥–æ–≤ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    """
    import re
    
    # –£–±–∏—Ä–∞–µ–º —Ç–µ–≥–∏ <think> –¥–ª—è –æ–±—ã—á–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (–æ—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ —Ñ–∏–Ω–∞–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç)
    think_pattern = r'<think>.*?</think>'
    cleaned = re.sub(think_pattern, '', response, flags=re.DOTALL)
    
    return cleaned.strip()

@dp.message(Command("start"))
async def cmd_start(message: Message):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
    """
    user_name = message.from_user.first_name or "–î—Ä—É–≥"
    user_id = message.from_user.id
    current_model = AVAILABLE_MODELS[get_user_model(user_id)]
    
    welcome_text = f"""
ü§ñ **–ü—Ä–∏–≤–µ—Ç, {user_name}!** –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ AI-–±–æ—Ç–∞ –Ω–∞ –±–∞–∑–µ Nous Research!

üß† **–¢–µ–∫—É—â–∞—è –º–æ–¥–µ–ª—å:** {current_model['display_name']}

**üìã –ú–æ–¥–µ–ª–∏:**
‚Ä¢ üß† **DeepHermes 24B** - –ë—ã—Å—Ç—Ä–∞—è, –≥–ª—É–±–æ–∫–æ–µ –º—ã—à–ª–µ–Ω–∏–µ
‚Ä¢ üöÄ **Hermes 405B** - –ú–æ—â–Ω–∞—è, –¥–ª—è —Å–ª–æ–∂–Ω—ã—Ö –∑–∞–¥–∞—á (–æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–∞)

**üí° –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:**
‚Ä¢ –ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞, —Ñ–∏–∑–∏–∫–∞, –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ
‚Ä¢ –ê–Ω–∞–ª–∏–∑ –∏ —Ä–∞—Å—Å—É–∂–¥–µ–Ω–∏—è  
‚Ä¢ –¢–≤–æ—Ä—á–µ—Å–∫–∏–µ –∑–∞–¥–∞–Ω–∏—è
‚Ä¢ –ü–æ–º–æ—â—å —Å —É—á–µ–±–æ–π –∏ —Ä–∞–±–æ—Ç–æ–π

**‚ö° –ö–æ–º–∞–Ω–¥—ã:**
/start - —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ
/model - –≤—ã–±—Ä–∞—Ç—å –º–æ–¥–µ–ª—å
/debug - —Ä–µ–∂–∏–º –æ—Ç–ª–∞–¥–∫–∏
/stats - —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞  
/help - –ø–æ–¥—Ä–æ–±–Ω–∞—è –ø–æ–º–æ—â—å

**üîß –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –¥–ª—è 405B:**
‚úÖ –°–æ–∫—Ä–∞—â–µ–Ω–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã –¥–ª—è —Å–∫–æ—Ä–æ—Å—Ç–∏
‚úÖ –£–ª—É—á—à–µ–Ω–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–∞–π–º–∞—É—Ç–æ–≤
‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –∑–∞–ø—Ä–æ—Å–æ–≤

–ù–∞—á–∏–Ω–∞–π—Ç–µ –æ–±—â–µ–Ω–∏–µ! üöÄ
    """
    await message.answer(welcome_text)

@dp.message(Command("model"))
async def cmd_model(message: Message):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã –≤—ã–±–æ—Ä–∞ –º–æ–¥–µ–ª–∏
    """
    user_id = message.from_user.id
    current_model = AVAILABLE_MODELS[get_user_model(user_id)]
    
    text = f"""
ü§ñ **–í—ã–±–æ—Ä –º–æ–¥–µ–ª–∏ AI**

**–¢–µ–∫—É—â–∞—è –º–æ–¥–µ–ª—å:** {current_model['display_name']}

**üß† DeepHermes 24B (–ë—ã—Å—Ç—Ä–∞—è)**
‚Ä¢ ‚ö° –°–∫–æ—Ä–æ—Å—Ç—å: –í—ã—Å–æ–∫–∞—è (~30-60 —Å–µ–∫)
‚Ä¢ üß† –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç—å: –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å –º—ã—à–ª–µ–Ω–∏—è –≤ <think>
‚Ä¢ üí≠ –õ—É—á—à–µ –¥–ª—è: –†–∞—Å—Å—É–∂–¥–µ–Ω–∏—è, –∞–Ω–∞–ª–∏–∑, –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ –∑–∞–¥–∞—á
‚Ä¢ üéØ –¢–æ–∫–µ–Ω—ã: –¥–æ 1024

**üöÄ Hermes 405B (–ú–æ—â–Ω–∞—è) - –û–ü–¢–ò–ú–ò–ó–ò–†–û–í–ê–ù–ê**
‚Ä¢ ‚ö° –°–∫–æ—Ä–æ—Å—Ç—å: –°—Ä–µ–¥–Ω—è—è (~60-120 —Å–µ–∫)
‚Ä¢ üéØ –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç—å: –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ –æ—Ç–≤–µ—Ç–æ–≤
‚Ä¢ üí≠ –õ—É—á—à–µ –¥–ª—è: –°–ª–æ–∂–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã, –∫—Ä–µ–∞—Ç–∏–≤, –∞–Ω–∞–ª–∏–∑
‚Ä¢ üéØ –¢–æ–∫–µ–Ω—ã: –¥–æ 512 (–æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–æ)
‚Ä¢ ‚úÖ –ê–≤—Ç–æ—Å–æ–∫—Ä–∞—â–µ–Ω–∏–µ –¥–ª–∏–Ω–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤

**üí° –°–æ–≤–µ—Ç:** –ù–∞—á–Ω–∏—Ç–µ —Å DeepHermes, –ø–µ—Ä–µ–∫–ª—é—á–∞–π—Ç–µ—Å—å –Ω–∞ 405B –¥–ª—è –æ—Å–æ–±–æ —Å–ª–æ–∂–Ω—ã—Ö –∑–∞–¥–∞—á.

–í—ã–±–µ—Ä–∏—Ç–µ –º–æ–¥–µ–ª—å:
    """
    
    await message.answer(text, reply_markup=create_model_keyboard())

@dp.callback_query(lambda c: c.data.startswith('model_'))
async def process_model_selection(callback_query: CallbackQuery):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ –º–æ–¥–µ–ª–∏
    """
    user_id = callback_query.from_user.id
    model_key = callback_query.data.split('_')[1]
    
    if model_key in AVAILABLE_MODELS:
        set_user_model(user_id, model_key)
        model_info = AVAILABLE_MODELS[model_key]
        
        # –°–ø–µ—Ü–∏–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è 405B
        extra_info = ""
        if model_key == "hermes405b":
            extra_info = "\n\n‚ö° **–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –≤–∫–ª—é—á–µ–Ω–∞:**\n‚Ä¢ –£—Å–∫–æ—Ä–µ–Ω–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞\n‚Ä¢ –°–æ–∫—Ä–∞—â–µ–Ω–∏–µ –¥–ª–∏–Ω–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤\n‚Ä¢ –£–ª—É—á—à–µ–Ω–Ω–∞—è —Å—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç—å"
        
        text = f"""
‚úÖ **–ú–æ–¥–µ–ª—å –∏–∑–º–µ–Ω–µ–Ω–∞!**

**–í—ã–±—Ä–∞–Ω–∞:** {model_info['display_name']}
**–û–ø–∏—Å–∞–Ω–∏–µ:** {model_info['description']}
**–ö–æ–Ω—Ç–µ–∫—Å—Ç:** {model_info['context']} —Ç–æ–∫–µ–Ω–æ–≤
**–ú–∞–∫—Å–∏–º—É–º —Ç–æ–∫–µ–Ω–æ–≤:** {model_info['max_tokens']}{extra_info}

–¢–µ–ø–µ—Ä—å –º–æ–∂–µ—Ç–µ –∑–∞–¥–∞–≤–∞—Ç—å –≤–æ–ø—Ä–æ—Å—ã! üöÄ
        """
        
        await callback_query.message.edit_text(text)
        await callback_query.answer(f"‚úÖ –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–æ –Ω–∞ {model_info['display_name']}")
    else:
        await callback_query.answer("‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –º–æ–¥–µ–ª—å")

@dp.callback_query(lambda c: c.data == 'cancel')
async def process_cancel(callback_query: CallbackQuery):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–º–µ–Ω—ã
    """
    await callback_query.message.delete()
    await callback_query.answer("–û—Ç–º–µ–Ω–µ–Ω–æ")

@dp.message(Command("help"))
async def cmd_help(message: Message):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help
    """
    help_text = """
üìö **–ü–æ–¥—Ä–æ–±–Ω–∞—è –ø–æ–º–æ—â—å**

üéØ **–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:**
‚Ä¢ –†–µ—à–µ–Ω–∏–µ –∑–∞–¥–∞—á —Å –ø–æ—à–∞–≥–æ–≤—ã–º –∞–Ω–∞–ª–∏–∑–æ–º
‚Ä¢ –ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞ –ª—é–±—ã—Ö —è–∑—ã–∫–∞—Ö
‚Ä¢ –ö—Ä–µ–∞—Ç–∏–≤–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç (—Å—Ç–∏—Ö–∏, —Ä–∞—Å—Å–∫–∞–∑—ã)
‚Ä¢ –û–±—ä—è—Å–Ω–µ–Ω–∏–µ —Å–ª–æ–∂–Ω—ã—Ö –∫–æ–Ω—Ü–µ–ø—Ü–∏–π
‚Ä¢ –ê–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö –∏ –≤—ã–≤–æ–¥—ã
‚Ä¢ –ü–æ–º–æ—â—å —Å —É—á–µ–±–Ω—ã–º–∏ –∑–∞–¥–∞–Ω–∏—è–º–∏

ü§ñ **–ú–æ–¥–µ–ª–∏ (–û–ü–¢–ò–ú–ò–ó–ò–†–û–í–ê–ù–ù–´–ï):**
‚Ä¢ **DeepHermes 24B** - –ë—ã—Å—Ç—Ä–∞—è, –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –º—ã—à–ª–µ–Ω–∏–µ
‚Ä¢ **Hermes 405B** - –ú–æ—â–Ω–∞—è, –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–∞ –¥–ª—è —Å–∫–æ—Ä–æ—Å—Ç–∏

üí° **–ü—Ä–∏–º–µ—Ä—ã –∑–∞–ø—Ä–æ—Å–æ–≤:**
‚Ä¢ "–û–±—ä—è—Å–Ω–∏ –∫–≤–∞–Ω—Ç–æ–≤—É—é —Ñ–∏–∑–∏–∫—É –ø—Ä–æ—Å—Ç—ã–º–∏ —Å–ª–æ–≤–∞–º–∏"
‚Ä¢ "–ù–∞–ø–∏—à–∏ —Ñ—É–Ω–∫—Ü–∏—é —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ –Ω–∞ Python"  
‚Ä¢ "–°–æ–∑–¥–∞–π –ø–ª–∞–Ω –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤–æ–π –∫–∞–º–ø–∞–Ω–∏–∏"
‚Ä¢ "–†–µ—à–∏: 2x¬≤ + 5x - 3 = 0"
‚Ä¢ "–ö–æ—Ä–æ—Ç–∫–∏–π —Ä–∞—Å—Å–∫–∞–∑ –ø—Ä–æ –∫–æ—Å–º–æ—Å"

üîß **–ö–æ–º–∞–Ω–¥—ã:**
/start - –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
/model - –í—ã–±–æ—Ä –º–æ–¥–µ–ª–∏
/debug - –†–µ–∂–∏–º –æ—Ç–ª–∞–¥–∫–∏ (–ø–æ–∫–∞–∑–∞—Ç—å <think>)
/stats - –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞–ø—Ä–æ—Å–æ–≤
/help - –≠—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞

‚öôÔ∏è **–õ–∏–º–∏—Ç—ã –∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏:**
‚Ä¢ Rate limit: 1 –∑–∞–ø—Ä–æ—Å –≤ 3 —Å–µ–∫—É–Ω–¥—ã
‚Ä¢ 405B: –∞–≤—Ç–æ—Å–æ–∫—Ä–∞—â–µ–Ω–∏–µ –¥–ª–∏–Ω–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
‚Ä¢ –ê–¥–∞–ø—Ç–∏–≤–Ω—ã–µ —Ç–∞–π–º–∞—É—Ç—ã
‚Ä¢ –ü–æ–≤—Ç–æ—Ä–Ω—ã–µ –ø–æ–ø—ã—Ç–∫–∏ –ø—Ä–∏ –æ—à–∏–±–∫–∞—Ö

üîç **–†–µ–∂–∏–º –æ—Ç–ª–∞–¥–∫–∏:**
–ö–æ–º–∞–Ω–¥–∞ /debug –ø–æ–∫–∞–∂–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å —Ä–∞–∑–º—ã—à–ª–µ–Ω–∏–π DeepHermes –≤ —Ç–µ–≥–∞—Ö <think>

üí° **–°–æ–≤–µ—Ç—ã –¥–ª—è 405B:**
‚Ä¢ –ó–∞–¥–∞–≤–∞–π—Ç–µ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ, —á–µ—Ç–∫–∏–µ –≤–æ–ø—Ä–æ—Å—ã
‚Ä¢ –ò–∑–±–µ–≥–∞–π—Ç–µ –æ—á–µ–Ω—å –¥–ª–∏–Ω–Ω—ã—Ö —Ç–µ–∫—Å—Ç–æ–≤
‚Ä¢ –ü—Ä–∏ –¥–æ–ª–≥–æ–º –æ–∂–∏–¥–∞–Ω–∏–∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ DeepHermes
    """
    await message.answer(help_text)

@dp.message(Command("premium"))
async def cmd_premium(message: Message):
    """
    –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–µ–º–∏—É–º –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è—Ö
    """
    premium_text = """
üíé **–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ**

üöÄ **–î–æ—Å—Ç—É–ø–Ω–æ —Å–µ–π—á–∞—Å (–û–ü–¢–ò–ú–ò–ó–ò–†–û–í–ê–ù–û):**
‚Ä¢ 2 –º–æ—â–Ω—ã–µ AI –º–æ–¥–µ–ª–∏ —Å —É–ª—É—á—à–µ–Ω–∏—è–º–∏
‚Ä¢ –†–µ–∂–∏–º –≥–ª—É–±–æ–∫–æ–≥–æ –º—ã—à–ª–µ–Ω–∏—è
‚Ä¢ –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Ä–∞–±–æ—Ç–∞ 405B –º–æ–¥–µ–ª–∏
‚Ä¢ –ê–¥–∞–ø—Ç–∏–≤–Ω—ã–µ —Ç–∞–π–º–∞—É—Ç—ã –∏ –ø–æ–≤—Ç–æ—Ä—ã
‚Ä¢ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è

‚≠ê **–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –≤–µ—Ä—Å–∏–∏ 2.0:**
‚úÖ –£—Å–∫–æ—Ä–µ–Ω–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–ª—è 405B
‚úÖ –ê–≤—Ç–æ—Å–æ–∫—Ä–∞—â–µ–Ω–∏–µ –¥–ª–∏–Ω–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤  
‚úÖ –£–ª—É—á—à–µ–Ω–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
‚úÖ –ê–¥–∞–ø—Ç–∏–≤–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã
‚úÖ –ò–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã–µ –ø–æ–≤—Ç–æ—Ä–Ω—ã–µ –ø–æ–ø—ã—Ç–∫–∏

üí∞ **–¢–µ–∫—É—â–∏–µ –ª–∏–º–∏—Ç—ã API:**
‚Ä¢ 100 –∑–∞–ø—Ä–æ—Å–æ–≤/–º–∏–Ω (–æ–±—â–∏–µ –¥–ª—è –≤—Å–µ—Ö)
‚Ä¢ Rate limit: 1 –∑–∞–ø—Ä–æ—Å –≤ 3 —Å–µ–∫ –Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
‚Ä¢ DeepHermes: ~30-60 —Å–µ–∫ –æ—Ç–≤–µ—Ç
‚Ä¢ Hermes 405B: ~60-120 —Å–µ–∫ –æ—Ç–≤–µ—Ç (–æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–æ)

üìä **–ü–ª–∞–Ω—ã —Ä–∞–∑–≤–∏—Ç–∏—è:**
‚Ä¢ –ü–∞–º—è—Ç—å –¥–∏–∞–ª–æ–≥–æ–≤ –º–µ–∂–¥—É —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏
‚Ä¢ –†–∞–±–æ—Ç–∞ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏ –∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞–º–∏
‚Ä¢ –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ AI
‚Ä¢ –†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞

üìß **–û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å:**
–°–æ–æ–±—â–∞–π—Ç–µ –æ –ø—Ä–æ–±–ª–µ–º–∞—Ö –∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è—Ö!
    """
    await message.answer(premium_text)

@dp.message(Command("debug"))
async def cmd_debug(message: Message):
    """
    –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Ä–µ–∂–∏–º–∞ –æ—Ç–ª–∞–¥–∫–∏ –¥–ª—è –ø–æ–∫–∞–∑–∞ —Ç–µ–≥–æ–≤ —Ä–∞–∑–º—ã—à–ª–µ–Ω–∏–π
    """
    user_id = message.from_user.id
    current_debug = get_user_debug_mode(user_id)
    new_debug = not current_debug
    set_user_debug_mode(user_id, new_debug)
    
    if new_debug:
        await message.answer("""
üîç **–†–µ–∂–∏–º –æ—Ç–ª–∞–¥–∫–∏ –≤–∫–ª—é—á–µ–Ω**

–¢–µ–ø–µ—Ä—å –≤—ã –±—É–¥–µ—Ç–µ –≤–∏–¥–µ—Ç—å –ø—Ä–æ—Ü–µ—Å—Å —Ä–∞–∑–º—ã—à–ª–µ–Ω–∏–π AI –≤ —Ç–µ–≥–∞—Ö <think>

‚ö†Ô∏è **–í–∞–∂–Ω–æ:** –†–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ —Å DeepHermes –º–æ–¥–µ–ª—å—é
üöÄ **Hermes 405B** –Ω–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ç–µ–≥–∏ —Ä–∞–∑–º—ã—à–ª–µ–Ω–∏–π –¥–ª—è —É—Å–∫–æ—Ä–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã
        """)
    else:
        await message.answer("üîç **–†–µ–∂–∏–º –æ—Ç–ª–∞–¥–∫–∏ –≤—ã–∫–ª—é—á–µ–Ω**\n–¢–µ–ø–µ—Ä—å –≤—ã –±—É–¥–µ—Ç–µ –≤–∏–¥–µ—Ç—å —Ç–æ–ª—å–∫–æ —Ñ–∏–Ω–∞–ª—å–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã")

@dp.message(Command("stats"))
async def cmd_stats(message: Message):
    """
    –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    """
    user_id = message.from_user.id
    count = user_stats.get(user_id, 0)
    current_model = AVAILABLE_MODELS[get_user_model(user_id)]
    debug_mode = get_user_debug_mode(user_id)
    
    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≤—Ä–µ–º–µ–Ω–∏
    last_request_time = user_last_request.get(user_id, 0)
    last_request_str = "–ù–∏–∫–æ–≥–¥–∞" if last_request_time == 0 else datetime.fromtimestamp(last_request_time).strftime("%H:%M:%S")
    
    stats_text = f"""
üìä **–í–∞—à–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:**

üë§ **–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:**
‚Ä¢ ID: {user_id}
‚Ä¢ –í—Å–µ–≥–æ –∑–∞–ø—Ä–æ—Å–æ–≤: {count}
‚Ä¢ –ü–æ—Å–ª–µ–¥–Ω–∏–π –∑–∞–ø—Ä–æ—Å: {last_request_str}

ü§ñ **–ù–∞—Å—Ç—Ä–æ–π–∫–∏:**
‚Ä¢ –ú–æ–¥–µ–ª—å: {current_model['display_name']}
‚Ä¢ Max —Ç–æ–∫–µ–Ω–æ–≤: {current_model['max_tokens']}
‚Ä¢ –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {current_model['temperature']}
‚Ä¢ –†–µ–∂–∏–º –æ—Ç–ª–∞–¥–∫–∏: {'üü¢ –í–∫–ª—é—á–µ–Ω' if debug_mode else 'üî¥ –í—ã–∫–ª—é—á–µ–Ω'}

‚ö° **–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏:**
‚Ä¢ Rate limit: 1 –∑–∞–ø—Ä–æ—Å –≤ 3 —Å–µ–∫
‚Ä¢ –¢–∞–π–º–∞—É—Ç: {current_model['timeout']}s
‚Ä¢ –°—Ç–∞—Ç—É—Å: üü¢ –ê–∫—Ç–∏–≤–µ–Ω

üöÄ **–û –±–æ—Ç–µ:**
‚Ä¢ –í–µ—Ä—Å–∏—è: 2.0 (–æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è)
‚Ä¢ –î–æ—Å—Ç—É–ø–Ω–æ –º–æ–¥–µ–ª–µ–π: {len(AVAILABLE_MODELS)}
‚Ä¢ API: Nous Research
    """
    await message.answer(stats_text)

@dp.message()
async def handle_message(message: Message):
    """
    –û–ü–¢–ò–ú–ò–ó–ò–†–û–í–ê–ù–ù–´–ô –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—Å–µ—Ö —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
    """
    user_message = message.text
    user_id = message.from_user.id
    user_name = message.from_user.first_name or "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º rate limiting
    if not check_rate_limit(user_id):
        remaining_time = get_time_until_next_request(user_id)
        await message.answer(f"‚è≥ –ü–æ–¥–æ–∂–¥–∏—Ç–µ {remaining_time} —Å–µ–∫. –¥–æ —Å–ª–µ–¥—É—é—â–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞")
        return
    
    # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    user_stats[user_id] = user_stats.get(user_id, 0) + 1
    
    # –ü–æ–ª—É—á–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user_model = get_user_model(user_id)
    model_info = AVAILABLE_MODELS[user_model]
    debug_mode = get_user_debug_mode(user_id)
    
    # –õ–æ–≥–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å
    logger.info(f"üìù –ó–∞–ø—Ä–æ—Å #{user_stats[user_id]} –æ—Ç {user_name} (ID: {user_id}, –º–æ–¥–µ–ª—å: {model_info['display_name']}): {user_message[:50]}...")
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä "–ø–µ—á–∞—Ç–∞–µ—Ç"
    await bot.send_chat_action(chat_id=message.chat.id, action="typing")
    
    # –ê–î–ê–ü–¢–ò–í–ù–´–ï —Å–æ–æ–±—â–µ–Ω–∏—è –æ –≤—Ä–µ–º–µ–Ω–∏ –æ–∂–∏–¥–∞–Ω–∏—è
    status_msg = None
    if user_model == "hermes405b":
        status_msg = await message.answer(f"""
üöÄ **{model_info['display_name']}** –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∑–∞–ø—Ä–æ—Å...

‚è± **–û–∂–∏–¥–∞–µ–º–æ–µ –≤—Ä–µ–º—è:** 1-2 –º–∏–Ω—É—Ç—ã
üîß **–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏:** –í–∫–ª—é—á–µ–Ω—ã  
üí° **–°–æ–≤–µ—Ç:** –î–ª—è –±—ã—Å—Ç—Ä—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ DeepHermes (/model)
        """)
    elif len(user_message) > 200:
        status_msg = await message.answer(f"üß† **{model_info['display_name']}** –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –≤–∞—à –∑–∞–ø—Ä–æ—Å...\n‚è± –û–∂–∏–¥–∞–π—Ç–µ –¥–æ 1 –º–∏–Ω—É—Ç—ã")
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º –æ—Ç–≤–µ—Ç –æ—Ç AI
        ai_response = await call_nous_api(user_message, user_id)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞ –æ—à–∏–±–∫–∏ API –ª–∏–º–∏—Ç–æ–≤
        if "rate limit" in ai_response.lower() or "429" in ai_response or "–ø—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç" in ai_response.lower():
            if status_msg:
                try:
                    await status_msg.delete()
                except:
                    pass
            await message.answer(ai_response)
            return
        
        # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ç—É—Å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        if status_msg:
            try:
                await status_msg.delete()  
            except:
                pass
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω—É–∂–Ω–æ –ª–∏ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å –ø—Ä–æ—Ü–µ—Å—Å —Ä–∞–∑–º—ã—à–ª–µ–Ω–∏–π  
        if debug_mode and user_model == "deephermes":
            # –í —Ä–µ–∂–∏–º–µ –æ—Ç–ª–∞–¥–∫–∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–ª–Ω—ã–π –æ—Ç–≤–µ—Ç —Å —Ç–µ–≥–∞–º–∏ <think>
            final_response = ai_response
        else:
            # –í –æ–±—ã—á–Ω–æ–º —Ä–µ–∂–∏–º–µ —Å–∫—Ä—ã–≤–∞–µ–º —Ç–µ–≥–∏ —Ä–∞–∑–º—ã—à–ª–µ–Ω–∏–π
            final_response = clean_ai_response(ai_response)
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –º–æ–¥–µ–ª–∏ –≤ –Ω–∞—á–∞–ª–æ –æ—Ç–≤–µ—Ç–∞
        model_prefix = f"ü§ñ **{model_info['display_name']}:**\n\n"
        final_response = model_prefix + final_response
        
        # Telegram –∏–º–µ–µ—Ç –ª–∏–º–∏—Ç –Ω–∞ –¥–ª–∏–Ω—É —Å–æ–æ–±—â–µ–Ω–∏–π (4096 —Å–∏–º–≤–æ–ª–æ–≤)
        if len(final_response) > 4000:
            # –†–∞–∑–±–∏–≤–∞–µ–º –¥–ª–∏–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç –Ω–∞ —á–∞—Å—Ç–∏
            parts = []
            for i in range(0, len(final_response), 4000):
                parts.append(final_response[i:i+4000])
            
            for i, part in enumerate(parts):
                if i == 0:
                    await message.answer(f"üìù **–û—Ç–≤–µ—Ç (—á–∞—Å—Ç—å {i+1}/{len(parts)}):**\n\n{part}")
                else:
                    await message.answer(f"üìù **–ß–∞—Å—Ç—å {i+1}/{len(parts)}:**\n\n{part}")
        else:
            await message.answer(final_response)
            
        logger.info(f"‚úÖ –û—Ç–≤–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_name} (–º–æ–¥–µ–ª—å: {model_info['display_name']}, –¥–ª–∏–Ω–∞: {len(final_response)} —Å–∏–º–≤–æ–ª–æ–≤)")
        
    except Exception as e:
        logger.error(f"üí• –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç {user_name}: {str(e)}")
        # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ç—É—Å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –µ—Å–ª–∏ –æ–Ω–æ –±—ã–ª–æ
        if status_msg:
            try:
                await status_msg.delete()
            except:
                pass
        await message.answer("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–∞—à–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –∑–∞–¥–∞–π—Ç–µ –±–æ–ª–µ–µ –∫–æ—Ä–æ—Ç–∫–∏–π –≤–æ–ø—Ä–æ—Å.")

async def main():
    """
    –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞
    """
    logger.info("üöÄ –ó–∞–ø—É—Å–∫ Telegram –±–æ—Ç–∞ —Å Nous Research API (–û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è 2.0)...")
    logger.info(f"Bot Token: {BOT_TOKEN[:10]}...")
    logger.info(f"API Key: {NOUS_API_KEY[:10]}...")
    logger.info(f"–î–æ—Å—Ç—É–ø–Ω—ã–µ –º–æ–¥–µ–ª–∏: {', '.join([model['display_name'] for model in AVAILABLE_MODELS.values()])}")
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏
    logger.info("‚úÖ –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –≤–∫–ª—é—á–µ–Ω—ã:")
    logger.info("   ‚Ä¢ Hermes 405B: max_tokens=512, temperature=0.3")
    logger.info("   ‚Ä¢ –ê–≤—Ç–æ—Å–æ–∫—Ä–∞—â–µ–Ω–∏–µ –¥–ª–∏–Ω–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ –¥–ª—è 405B")
    logger.info("   ‚Ä¢ –ê–¥–∞–ø—Ç–∏–≤–Ω—ã–µ —Ç–∞–π–º–∞—É—Ç—ã –∏ –ø–æ–≤—Ç–æ—Ä–Ω—ã–µ –ø–æ–ø—ã—Ç–∫–∏")
    logger.info("   ‚Ä¢ –£–ª—É—á—à–µ–Ω–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫")
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ
        bot_info = await bot.get_me()
        logger.info(f"‚úÖ –ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω: @{bot_info.username}")
        
        # –£–¥–∞–ª—è–µ–º webhook (–µ—Å–ª–∏ –±—ã–ª —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω)
        await bot.delete_webhook(drop_pending_updates=True)
        logger.info("üîÑ Webhook —É–¥–∞–ª–µ–Ω, –Ω–∞—á–∏–Ω–∞–µ–º –ø–æ–ª–ª–∏–Ω–≥...")
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –ø–æ–ª–ª–∏–Ω–≥
        await dp.start_polling(bot)
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞: {str(e)}")
        raise

if __name__ == "__main__":
    try:
        asyncio.run(main())
    except KeyboardInterrupt:
        logger.info("‚èπÔ∏è –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    except Exception as e:
        logger.error(f"üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {str(e)}")
